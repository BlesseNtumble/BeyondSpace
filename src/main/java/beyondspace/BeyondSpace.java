package beyondspace;

import java.io.File;
import java.util.Arrays;

import org.apache.logging.log4j.Logger;

import beyondspace.core.configs.BSConfigCore;
import beyondspace.core.proxy.CommonProxy;
import beyondspace.systems.SolarSystem.SolarSystemBodies;
import micdoodle8.mods.galacticraft.core.Constants;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.Mod.EventHandler;
import net.minecraftforge.fml.common.Mod.Instance;
import net.minecraftforge.fml.common.ModMetadata;
import net.minecraftforge.fml.common.SidedProxy;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPostInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;

@Mod(
		   modid = BeyondSpace.MODID,
		   version = BeyondSpace.VERSION,
		   dependencies = Constants.DEPENDENCIES_FORGE + "required-after:galacticraftcore@[4.0.2.261,]; required-after:galacticraftplanets; required-after:asmodeuscore@[0.0.14,); required-after:galaxyspace@[2.0.14,)",
		   acceptedMinecraftVersions = Constants.MCVERSION,
		   name = BeyondSpace.NAME
		   //guiFactory = "galaxyspace.core.client.gui.GSConfigGuiFactory"
		)
public class BeyondSpace {
	public static final int major_version = 1;
	public static final int minor_version = 0;
	public static final int build_version = 0;
	
	public static final String NAME = "BeyondSpace";
	public static final String MODID = "beyondspace";
    public static final String VERSION = major_version + "." + minor_version + "." + build_version;
    public static final String ASSET_PREFIX = MODID;
    public static final String TEXTURE_PREFIX = ASSET_PREFIX + ":";
    public static final boolean DEBUG = true;
    private static Logger log;
    
    @Instance(BeyondSpace.MODID)
    public static BeyondSpace instance;
    
    @SidedProxy(clientSide=MODID+".core.proxy.ClientProxy", serverSide=MODID+".core.proxy.CommonProxy")
    public static CommonProxy proxy;
    
    @EventHandler
    public void preInit(FMLPreInitializationEvent event) { 
    	this.initModInfo(event.getModMetadata());
    	log = event.getModLog();
    	
    	new BSConfigCore(new File(event.getModConfigurationDirectory(), NAME + "/core.conf"));
    	
    	proxy.preload(event);    
    	SolarSystemBodies.preInit();
    	
    }
    
    @EventHandler
    public void init(FMLInitializationEvent event) {
    	proxy.load(event);    	
    }
    
    @EventHandler
    public void postInit(FMLPostInitializationEvent event) {
    	proxy.postload(event);
    	SolarSystemBodies.postInit();
    }
    
    private void initModInfo(ModMetadata info)
    {
        info.autogenerated = false;
        info.modId = MODID;
        info.name = NAME;
        info.version = VERSION;
        info.description = "Sub-module for GalaxySpace.";
        info.authorList = Arrays.asList("BlesseNtumble, gug2");
    }
}
